

Task 1: What does the confusion matrix show for this example?
    - The confusion matrix shows which classes were misclassified as other classes. In this example its what digits
        did it get confused with in its classification.



Task 2: How does the TensorFlow network architecture differ from the Keras example given in class? Report any improvements
you can make over the baseline testset accuracy for this task.

    - The tensorflow model is more complex than the keras we had in class. It is defined by DNN Classifier object.
    Here we modify just the regularization method, number of hidden layers, number of nodes in each layer, and the
    hyperparameters. With Keras, we add layers individually which makes it modular and nice to visualize / use.

    - classifier = train_nn_classification_model(
    learning_rate=0.05,
    steps=1000,
    batch_size=30,
    hidden_units=[100, 100],
    training_examples=training_examples,
    training_targets=training_targets,
    validation_examples=validation_examples,
    validation_targets=validation_targets)

Final accuracy (on validation data): 0.94



Task 3: What differences can you see between the visualizations for 10 steps and 1000 steps?

THe pictures are much much more blurry and pixelated with 10 steps compared to 1000. The more steps they have, the better
quality the images appear. It also gave me 60% accuracy, which shows additional problems with it. It is too much noise to
be discernable.
